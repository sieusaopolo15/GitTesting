1. git init:
	- Là một câu lệnh tạo ra một file tên là .git, trong file này chứa các cấu hình cần thiết để giúp cho việc theo dõi lịch sử thay đổi của 
	các file, của các thư mục khác có trong thư mục mẹ chứa cái file .git
	
2. git clone <url>:
	- Kéo một remote project về máy của mình
	
3. git clone <url> <project name>:
	- Câu lệnh này giống như git clone nhưng mà project khi clone về sẽ bị thay đổi tên theo <project name> mà ta đặt
	Ví dụ: git clone http://gitlab.cyberlogitec.com.vn/clt-rd/rpa/mobile/part-auto-distribution.git MyProject

4. Ghi chú 1 (Xem thêm ở hình filesLifeCycle.png):
	- Khi ta tạo các file mới trong thư mục mẹ chứa .git thì các file đó sẽ chuyển sang status untracked
	- Khi ta add một file unstracked thì status của nó sẽ thay dổi thành staged
	- Khi ta clone một repository về thì tất cả các file trong đó là có trạng thái là unmodified
	- Khi ta xoá một cái file đi thì cái file đó về trạng thái untracked (không được theo dõi nữa)
	- Với một file mà ta không xoá mà thay đổi nội dung bên trong thì nó chuyển sang trạng thái là modified
	- Với một file đã được sửa đổi mà ta sử dụng git add thì nó sẽ chuyển sang trạng thái là Staged (tức là đánh index cho nó)
	- Với một file đang ở trạng thái staged mà ta commit nó thì nó chuyển về trạng thái unmodified

5. git status:
	- Được dùng để kiểm tra trạng thái các file trong folder chứa .git thuộc trạng thái nào
	- Với những file có trạng thái modified thì chúng đã sẵn sàng để được commit
	Ví dụ: gitStatusCommand.png

6. git add:
	- git add . : add toàn bộ các file mới vào để chuẩn bị commit
	- git add -u: chỉ add các file bị thay đổi với trạng thái modified
	- git add -A: add tất cả các file ngoại trừ file có trạng thái untracked và unmodified

7. git commit:
	- Xác nhận chính thức các file đã được đánh index, tức là trong trạng thái sẵn sàng, và lưu lại bản sao trạng thái của các file này
	- git commit -m "message": commit kèm theo ghi chú về lần commit này
	- git commit -a -m "message": là tối giản cho:
		+ git add -A
		+ git commit -m "message"

8. git log:
	- Hiện ra các lịch sử commit trong thư mục mẹ chứa .git
	- git log --oneline: hiện tất cả lịch sử thành 1 dòng duy nhất, tức là không có người commit, không có ngày tháng năm giờ commit
	- git log --name-status: Hiển thị lịch sử thay đổi file và người thay đổi
	- git log --name-status -<number>: hiển thị số lượng log trên console tính từ lần thay đổi gần nhất

9. git reset <mã log> (mã log lấy từ git log)
	- Là quay trở lại commit ở mã log đó
	- Có hai loại reset: Hard và soft:
		+ Soft: Khi reset các file mới chuyển trạng thái modified và các file cũ đã thay đổi nội dung quay về nội dung dựa vào mã log
		+ Hard: Khi reset các file mới đều bị xoá sạch chỉ chừa lại các file cũ với nội dung thuộc về mã log đó.

10. git checkout <mã log>
	- Là quay về phiên làm việc dựa vào mã log như git reset và để quay lại trạng thái sau khi checkout thì ta chọn mã log đầu tiên để quay về
	- git checkout <branch_name>: để di chuyển giữa các nhánh
	- git checkout -b <branch_name>: Vừa tạo nhánh vừa chuyển sang nhánh vừa tạo
	
11. git branch
	- git branch: Xem tất cả các nhánh có trong repository
	- git branch <brance_name>: tạo một nhánh mới với tên không bị trùng lắp
	- git branch -m <tên_branch_cần_đổi> <tên_mới>
	- git branch -f <brance_name> <commit_name>: di chuyển nhánh tới commit được xác định
	
12. push project:
	- git remote add <tên_remote> <tên_url>: thêm mới một remote
	- git remote set-url origin <url>
	- git push origin <brance_name>: Đẩy local project lên remote repository dựa trên remote set-url ở trên
	- git remote -v: xem tất cả các remote hiện có
	
13. git pull
	- git pull <url> hoặc git pull origin <branch_name> (cách này chỉ làm được khi set git remote)
	
14. set email, username trong một repo
	- git config user.email "MY_NAME@example.com"
	- git config user.name "FIRST_NAME LAST_NAME"
	
15. set email, username cho toàn bộ repo
	- git config --global user.email "MY_NAME@example.com"
	- git config --global user.name "FIRST_NAME LAST_NAME"

16. Trước khi update project mới về thì ta muốn xem các file sắp thay đổi như sau:
	- git fetch
	- git log --name-status origin/master..